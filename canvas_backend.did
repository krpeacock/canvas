type Color = record { a : nat8; b : nat8; g : nat8; r : nat8 };
type HttpHeader = record { value : text; name : text };
type HttpRequest = record {
  url : text;
  method : text;
  body : vec nat8;
  headers : vec record { text; text };
};
type HttpResponse = record {
  status : nat;
  body : vec nat8;
  headers : vec HttpHeader;
};
type PixelUpdate = record { pos : Position; color : Color; tile_idx : nat32 };
type Position = record { x : nat32; y : nat32 };
service : () -> {
  check_cooldown : () -> (nat64) query;
  cycles : () -> (nat64) query;
  http_request : (HttpRequest) -> (HttpResponse) query;
  time_left : () -> (nat64) query;
  update_overview : () -> ();
  update_pixel : (PixelUpdate) -> ();
}
